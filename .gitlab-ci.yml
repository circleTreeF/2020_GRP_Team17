stages:
  - web_validate
  - app_test
  - app_build

build_debug:
  image: "cirrusci/flutter:2.0.0"
  stage: app_build
  before_script:
    - cd road_monitoring_system/
    - export PATH="$PATH":"$HOME/.pub-cache/bin"
  script:
    - flutter pub get
    - flutter build apk --debug --split-per-abi

  artifacts:
    paths:
      - build/app/outputs/apk/debug/*.apk

build_release:
  image: "cirrusci/flutter:2.0.0"
  stage: app_build
  before_script:
    - cd road_monitoring_system/
    - export PATH="$PATH":"$HOME/.pub-cache/bin"
  script:
    - flutter pub get
    -  flutter build apk --release --build-number=$CI_PIPELINE_ID
  artifacts:
    paths:
      - build/app/outputs/apk/release/*.apk


code_quality:
  image: "cirrusci/flutter:2.0.0"
  stage: app_test
  before_script:
    - cd road_monitoring_system/
    - export PATH="$PATH":"$HOME/.pub-cache/bin"
    - pub global activate dart_code_metrics
  script:
    - metrics lib -r codeclimate  > code-quality-report.json
  artifacts:
    paths:
      - bin/cache/artifacts/flutter/
    reports:
      codequality: code-quality-report.json



test:
  image: "cirrusci/flutter:2.0.0"
  stage: app_test
  before_script:
    - cd road_monitoring_system/
    - export PATH="$PATH":"$HOME/.pub-cache/bin"
    - pub global activate junitreport
  script:
    - flutter test --coverage
#    - lcov --summary coverage/lcov.info
    - genhtml coverage/lcov.info --output=coverage
#  coverage: '/lines\.*: \d+\.\d+\%/'
  artifacts:
    name: coverage
    paths:
      - bin/cache/artifacts/flutter/
    reports:
      junit: coverage.xml


web_validate:
    stage: web_validate
    image: node:latest
    # Validate that the repository contains a package.json and extract a few values from it.
    before_script:
      - cd website/road_monitoring_system/
      - |
        if [[ ! -f package.json ]]; then
          echo "No package.json found! A package.json file is required to publish a package to GitLab's NPM registry."
          echo 'For more information, see https://docs.gitlab.com/ee/user/packages/npm_registry/#creating-a-project'
          exit 1
        fi
      - NPM_PACKAGE_NAME=$(node -p "require('./package.json').name")
      - NPM_PACKAGE_VERSION=$(node -p "require('./package.json').version")
      - yarn install

  # Validate that the package name is properly scoped to the project's root namespace.
  # For more information, see https://docs.gitlab.com/ee/user/packages/npm_registry/#package-naming-convention
    script:
      - npm run build
